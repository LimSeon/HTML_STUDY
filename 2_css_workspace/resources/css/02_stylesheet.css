/* CSS영역 (스타일 정보 바로 기입) */
/* 1. 속성선택자 */

/* div 요소 중에서 name 속성 값이 name1과 "일치"하는 요소만 스타일을 부여하겠다. */
div[name=name1]{
    background-color: blue;
}
/* div 요소 중에서 name 속성 값에 name1이 "포함" 되어있는 요소만 스타일을 부여하겠다. */
div[name~=name1]{
    background: orange;
}

/* div 요소 중에서 class 속성 값에 i가 "포함"되어있는 요소만 스타일을 부여하겠다.  */
div[class*=i]{
    color:white;
    background-color: tomato;
}
/* div 요소 중에서 class 속성 값이 div로 "시작"하는 요소만 스타일을 부여하겠다. */
div[class|=div]{
    color: yellow;
}
/* div 요소 중에서 name 속성값이 name3으로 "시작"하는 요소만 스타일을 부여하겠다. */
div[name^=name3]{
    background-color: lightpink;
}

/* div 요소 중에서 class 속성값이 ss로 "끝"나는 요소만 스타일을 부여하겠다. */
div[class$=ss]{
    background-color: darkgreen;
}
/* class 속성값이 div-class인 요소들 중에서도 name 속성값이 name3이 "포함"되어 있는 요소에 스타일을 부여하겠다. */
.div-class[name~=name3]{
    color:purple
}

/* 2. 자손선택자와 후손선택자 */
/* - 자손선택자 a > b : a 요소의 자손들 중에서 b요소들만 선택 */

/* id 속성 값이 test1인 요소의 자손들 중에서 h4태그인 자손들 */
#test1 > h4 {
    background-color: cornsilk;
}

/* id 속성 값이 test1인 요소의 자손들 중에서 ul태그인 요소의 자손들중에서 li태그 */
#test1 > ul > li {
    background-color: cyan;
}

/* 후손선택자 a b : a요소의 후손(모든 하위요소)들 중에서 b요소들만 선택하겠다. */
#test1 li{
    color: darksalmon;
    background-color: firebrick;    /* 우선순위가 밀려서 적용 X, 후손 선택자 보다 자손선택자가 우선순위가 높다*/
}


/* 3. 동위 선택자 */
/* a + b : a요소 "바로 뒤"에 있는 b요소 단 하나만을 선택 */

/* id가 test2인 요소 "바로 뒤"에 있는 div요소 하나만 선택하겠다. */
#test2 + div{
    background-color: forestgreen;
}

/* id가 test2인 요소 뒤에 있는 ul요소 하나만 선택하겠다. */  
#test2 + ul{
    background-color: hotpink;  /*바로 뒤의 요소가 아니기 때문에 반영 X*/
}


/* a ~ b : a요소 뒤에 있는 "모든" b요소들을 선택*/
/*id가 test2인 요소 뒤에 있는 모든 div요소를 선택
#test2 ~ div{
    background-color: royalblue;
}*/

/* id가 test2인 요소 뒤에 있는 모든 ul요소를 선택 */
#test2 ~ ul{
    background-color: deeppink;
}

/* 4. 반응 선택자 */
.area{
    width : 100px;
    height: 100px;
    background-color: aqua;
}

#active-test:active{
    color:coral;
    background-color: lemonchiffon;
    cursor: pointer;
}

#hover-test:hover{
    color:white;
    background-color: yellowgreen;
    cursor: pointer;
}

/* 5. 상태 선택자 */
/* 기본적으로 해당 선택된 요소 자체에만 스타일 반영 */

input[type=checkbox]:checked{ 
    width: 20px;
    height: 20px;
    /* font-size: 20px; 체크박스에는 폰트가 없어서 적용이 안됨*/ 
}

/* 체크박스가 체크 될 때 글씨 크기도 20px 변경하고 싶다면? */
input[type=checkbox]:checked + label{
    font-size: 20px;
}

/* focus */
input[name^=user]:focus{
    background-color: rebeccapurple;
}

/* enabled, disabled */
button:enabled{
    background-color: indianred;
}
button:disabled{
    background-color: lightgreen;
}